name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install plugin dependencies
      run: pip3 install --break-system-packages -r ./requirements.txt
    - name: Setup
      run: |
        pip install --break-system-packages paver
        paver setup

    - name: Build package
      env:
        SENTRY_KEY: ${{ secrets.SENTRY_KEY }}
        SEGMENTS_KEY: ${{ secrets.SEGMENTS_KEY }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha}}
      run: |
        paver package.sentry="${SENTRY_KEY}" package.segments="${SEGMENTS_KEY}" package.version="${GITHUB_SHA::7}" package
        mkdir tmp
        unzip planet_explorer.zip -d tmp

    - uses: actions/upload-artifact@v4
      with:
        name: planet_explorer_${{github.sha}}
        path: tmp

  install:
    name: "Install"
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        qgis_version: [ "3.44", "3.42", "3.40", "3.38", "release-3_36" ]
    env:
      QGIS_TEST_VERSION: ${{ matrix.qgis_version }}
      QGIS_COMMAND: qgis --noplugins --noversioncheck --nologo --version-migration --code ./planet_explorer/tests/install_plugin.py

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: planet_explorer_${{github.sha}}
          path: tmp

      - name: Zip artifact
        run: (cd tmp && zip -r ../planet_explorer_${{github.sha}}.zip .)

      - name: Pull qgis image
        run: docker pull "qgis/qgis:${QGIS_TEST_VERSION}"

      - name: Run install test
        run: docker run --rm -v "$(pwd)":/tests_directory -t -w /tests_directory "qgis/qgis:${QGIS_TEST_VERSION}" sh -c "xvfb-run ${QGIS_COMMAND}"
